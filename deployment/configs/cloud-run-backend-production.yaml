# ============================================================================
# Cloud Run Service Configuration: Backend Production
# ============================================================================
#
# PURPOSE:
#   Define Cloud Run service configuration for the backend production environment.
#
# USAGE:
#   gcloud run services replace deployment/configs/cloud-run-backend-production.yaml
#
# DESIGN DECISIONS (Production-specific):
#   Memory: 2GB
#     - Same as staging
#
#   CPU: 2 vCPU
#     - Same as staging
#
#   Min Instances: 1 ⭐ DIFFERENT FROM STAGING
#     - Reason: Avoid cold starts for better UX
#     - Cold start = 10-15 seconds (unacceptable for users)
#     - Cost: ~$30-40/month for 1 always-on instance
#
#   Max Instances: 20 ⭐ DIFFERENT FROM STAGING
#     - Reason: Handle production traffic spikes
#     - Auto-scales based on requests
#
#   Concurrency: 20
#     - Same as staging
#
#   Timeout: 600 seconds
#     - Same as staging
#
# PRODUCTION-SPECIFIC FEATURES:
#   - Health checks with stricter thresholds
#   - Request logging (all requests)
#   - Error tracking (Sentry integration)
#   - Performance monitoring (Cloud Trace)
#
# MONITORING & ALERTING:
#   - CPU > 80% for 5 minutes → Alert
#   - Memory > 90% for 5 minutes → Alert
#   - Error rate > 5% → Critical alert
#   - Latency P95 > 5s → Warning
#
# ROLLBACK STRATEGY:
#   - Previous revisions kept for 90 days
#   - Traffic can be routed to any previous revision
#   - Rollback time: < 2 minutes
#
# NEXT STEPS FOR IMPLEMENTATION:
#   1. Configure monitoring alerts
#   2. Set up error tracking (Sentry)
#   3. Enable request logging
#   4. Test rollback procedure
#
# ============================================================================

# TODO: Implement Cloud Run service configuration in YAML format
