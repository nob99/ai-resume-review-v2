version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ai-resume-review-postgres-dev
    environment:
      POSTGRES_DB: ai_resume_review_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - ai-resume-review-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_resume_review_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: ai-resume-review-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-resume-review-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: ai-resume-review-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@airesumereview.com
      PGADMIN_DEFAULT_PASSWORD: dev_pgadmin_123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ai-resume-review-network
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-resume-review-backend-dev
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot reload in development
      - ./backend/app:/app/app:ro
      # Mount AI agents module for prompt hot reload
      - ./backend/ai_agents:/app/ai_agents:ro
      # Mount database module for schema v1.1 integration
      - ./database:/app/database:ro
      # Mount infrastructure module for new architecture
      - ./backend/infrastructure:/app/infrastructure:ro
      # Mount logs directory
      - ./backend/logs:/app/logs
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ai_resume_review_dev
      DB_USER: postgres
      DB_PASSWORD: dev_password_123
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Development settings
      ENVIRONMENT: development
      DEBUG: "True"
      LOG_LEVEL: INFO
      # Override command for development with hot reload
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    env_file:
      - ./backend/.env
    networks:
      - ai-resume-review-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ai-resume-review-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload in development
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      # Mount package files for dependency management
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:ro
      # Mount Next.js config
      - ./frontend/next.config.ts:/app/next.config.ts:ro
      # Note: .next directory mount removed to prevent build cache corruption
      # Container will manage its own .next cache internally for stability
    environment:
      # API configuration - using localhost for browser requests (not internal Docker hostname)
      NEXT_PUBLIC_API_URL: http://localhost:8000
      # Development settings
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: 1
      # Enable hot reload
      WATCHPACK_POLLING: true
    command: ["npm", "run", "dev"]
    networks:
      - ai-resume-review-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    name: ai-resume-review-postgres-data
  redis_data:
    name: ai-resume-review-redis-data
  pgadmin_data:
    name: ai-resume-review-pgadmin-data

networks:
  ai-resume-review-network:
    name: ai-resume-review-network
    driver: bridge